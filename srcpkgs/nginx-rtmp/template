# Template file for 'nginx-rtmp'
pkgname=nginx-rtmp
version=1.16.1
revision=1
replaces="nginx>=0"
build_style=gnu-makefile
hostmakedepends="libressl-devel pcre-devel $(vopt_if geoip geoip-devel) wget"
makedepends="${hostmakedepends}"
short_desc="High performance web and reverse proxy server - built with the rtmp module."
maintainer="Hristos N. Triantafillou <voidpkg@hristos.lol>"
license="BSD-2-Clause"
homepage="https://nginx.org"
distfiles="https://nginx.org/download/nginx-${version}.tar.gz"
checksum=f11c2a6dd1d3515736f0324857957db2de98be862461b5a542a3ac6188dbe32b
wrksrc="nginx-${version}"

rtmp_version=1.2.1
rtmp_checksum=87aa597400b0b5a05274ee2d23d8cb8224e12686227a0abe31d783b3a645ea37
rtmp_distfiles="https://github.com/arut/nginx-rtmp-module/archive/v${rtmp_version}.tar.gz"

# NOTE:
# On update, the pregenerated header file for ARM may need synchronization.
# See srcpkgs/nginx/files/ngx_auto_config.h.armv6l.patch for more information.

conf_files="/etc/nginx/fastcgi.conf
 /etc/nginx/fastcgi_params
 /etc/nginx/koi-win
 /etc/nginx/koi-utf
 /etc/nginx/mime.types
 /etc/nginx/nginx.conf
 /etc/nginx/scgi_params
 /etc/nginx/uwsgi_params
 /etc/nginx/win-utf"
system_accounts="nginx"
nginx_homedir="/var/tmp/nginx"
make_dirs="/var/log/nginx 0750 root root
 /var/tmp 1777 root root
 /var/tmp/nginx 0750 nginx root"

build_options="geoip"
build_options_default="geoip"

pre_configure() {
    cd /tmp
    wget "${rtmp_distfiles}"
    echo "${rtmp_checksum}  v${rtmp_version}.tar.gz" | sha256sum -c -
    tar xvf "v${rtmp_version}.tar.gz"
}

do_configure() {
	local cfgdir=/etc/nginx
	local tmpdir=/var/tmp/nginx

	if [ "$CROSS_BUILD" ]; then
		# fake configure run on host
		unset CC CPP LD CFLAGS CPPFLAGS LDFLAGS
	fi

	./configure --prefix=${cfgdir} \
        --add-module=/tmp/nginx-rtmp-module-${rtmp_version} \
		--conf-path=${cfgdir}/nginx.conf \
		--sbin-path=/usr/bin/nginx \
		--pid-path=/run/nginx.pid \
		--lock-path=/var/lock/nginx.lock \
		--user=nginx --group=nginx \
		--http-log-path=/var/log/nginx/access.log \
		--error-log-path=/var/log/nginx/error.log \
		--http-client-body-temp-path=${tmpdir}/client-body \
		--http-proxy-temp-path=${tmpdir}/proxy \
		--http-fastcgi-temp-path=${tmpdir}/fastcgi \
		--http-scgi-temp-path=${tmpdir}/scgi \
		--http-uwsgi-temp-path=${tmpdir}/uwsgi \
		--with-mail --with-mail_ssl_module \
		--with-pcre-jit --with-file-aio \
		--with-http_gunzip_module \
		--with-http_v2_module \
		--with-http_dav_module \
		--with-http_gzip_static_module \
		--with-http_realip_module \
		--with-http_ssl_module \
		--with-http_stub_status_module \
		$(vopt_if geoip --with-http_geoip_module)
}

pre_build() {
	if [ "$CROSS_BUILD" ]; then
		case "$XBPS_TARGET_MACHINE" in
			arm*|aarch64*) cp "${FILESDIR}/ngx_auto_config.h.armv6l" objs/ngx_auto_config.h;;
		esac
	fi

	sed -i 's/-lcrypt/$(LDFLAGS) &/' objs/Makefile
}

post_install() {
	sed -e 's|\<user\s\+\w\+;|user html;|g' \
		-e '44s|html|/usr/share/nginx/html|' \
		-e '54s|html|/usr/share/nginx/html|' \
		-i "$DESTDIR/etc/nginx/nginx.conf"
	rm -- "$DESTDIR"/etc/nginx/*.default

	vmkdir usr/share/nginx
	mv "$DESTDIR/etc/nginx/html" "$DESTDIR/usr/share/nginx"

	vman man/nginx.8

	vlicense LICENSE
	vsv nginx
}
